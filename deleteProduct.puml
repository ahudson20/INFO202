@startuml

' style tweaks to make the diagram a little more readable
skinparam {
	Style strictuml
	RoundCorner 8

	Sequence {
		' make activations yellow too
		LifeLineBackgroundColor #FDFDCD

		' make stereotypes less ugly
		Stereotype {
			Font {
				Size 11
				Style plain
			}
		}
	}

	DatabaseBorderColor #A80036

}

title Delete Product

actor User as user
participant "Main" as main << main >>
participant "MainMenu" as menu << frame >>
participant "ProductViewer" as report << dialog >>
participant "ProductDatabaseDAO" as dao << DAO >>
database Database
participant "SimpleListModel\n:model" as model


create menu
main -> menu : « create »

user -> menu : clicks 'View Products'
activate menu

create report
menu -> report : « create »

activate report
create dao
report -> dao: « create »


note over report: as shown in\n'View Products'\ndiagram
user <-- report : list of products displayed

deactivate report

user -> report++ : selects a product in the list
report--

user -> report : clicks 'Delete' button
activate report

report -> report : productsList.getSelectedValue() : product
alt jList selection not empty
    report->user: show confirm dialog
alt clicks yes
    user -> report: clicks 'Yes' to confirm
    report->dao++ : deleteProduct(product)

    dao ->Database++ : delete from product\nwhere product_id = id
    dao--
    Database--
    
    report -> dao++ : getProducts()
    dao -> Database++ : select * from product
    return ResultSet
    dao->dao: reconstruct products\n from ResultSet
    dao --> report : products
    dao--
    'return products

    'report -> report : myModel.updateItems(products)
    create model
    report -> model : « construct »
    report -> model++ : updateItems(product)
    model--
    report -> report : productsList.setModel(model)
    note left: updated products\ndisplayed in viewer
    dao--
end
else jList selection empty
    report->user: show warning dialog
end
@enduml
